{"version":3,"sources":["am-date-picker_directive.js","am-date-picker.tmpl.js"],"names":["amDatePickerConfig","config","this","allowClear","backButtonText","inputDateFormat","maxYear","minYear","locale","popupDateFormat","showInputIcon","calendarIcon","clearIcon","nextIcon","prevIcon","setIcons","icons","key","setOptions","options","$get","amDatePickerService","createProperty","obj","name","value","Object","defineProperty","__proto__","get","properties","property","amDatePicker","restrict","templateUrl","require","scope","cancelButton","inputLabel","maxDate","minDate","todayButton","link","element","attr","controllers","ngModelCtrl","amDatePickerCtrl","configureNgModel","controller","AmDatePickerController","controllerAs","bindToController","replace","$scope","$timeout","$mdDialog","init","i","length","hasOwnProperty","angular","isDefined","isDate","model","modelMoment","moment","copy","modelMomentFormatted","format","undefined","days","localeData","daysOfWeek","_weekdaysMin","years","y","push","generateCalendar","updateErrorState","clearDate","$setViewValue","clearErrorState","forEach","field","$setValidity","$render","date","$viewValue","DialogController","cancel","select","hide","dialog","displayYearSelection","yearSelection","yearSelector","document","querySelector","activeYear","activeYearHeight","getElementsByTagName","offsetHeight","scrollTop","offsetTop","clientHeight","emptyFirstDays","previousDay","firstDayOfMonth","lastDayOfMonth","endOf","maxDays","day","j","add","disabled","isBefore","isAfter","selected","isSame","today","isTodayDisabled","toDate","hideYearSelection","nextMonth","onNextMonth","monthChanged","next","delay","openPicker","ev","show","onRemoving","parent","body","$new","targetEvent","then","updateModel","onPrevMonth","previousMonth","subtract","_day","selectYear","_year","year","momentDate","$watch","newValue","oldValue","module","directive","provider","$inject","run","$templateCache","put"],"mappings":"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","file":"am-date-picker.min.js","sourcesContent":["(function()\n{\n    'use strict';\n\n    angular\n        .module('am.date-picker', ['ngMaterial', 'ngAnimate'])\n        .directive('amDatePicker', amDatePicker)\n        .provider('amDatePickerConfig', amDatePickerConfig);\n\n\n    function amDatePickerConfig() {\n        var config = this;\n        config.allowClear = true;\n        config.backButtonText = \"Back\";\n        config.inputDateFormat = 'LL';\n        config.maxYear = 2020;\n        config.minYear = 1920;\n        config.locale = 'en';\n        config.popupDateFormat = 'ddd, MMM D';\n        config.showInputIcon = false;\n\n        /* Icons */\n        config.calendarIcon = '/dist/images/icons/ic_today_24px.svg';\n        config.clearIcon = '/dist/images/icons/ic_close_24px.svg';\n        config.nextIcon = '/dist/images/icons/ic_chevron_right_18px.svg';\n        config.prevIcon = '/dist/images/icons/ic_chevron_left_18px.svg';\n\n        config.setIcons = function(icons) {\n            for (var key in icons) {\n                config[key] = icons[key];\n            }\n        }\n\n        config.setOptions = function(options) {\n            for (var key in options) {\n                config[key] = options[key];\n            }\n         }\n\n        this.$get = function () {\n            return new amDatePickerService(config);\n        };\n\n    }\n\n    function amDatePickerService(config){\n        var properties = ['allowClear', 'backButtonText', 'cancelButton', 'inputLabel',\n                          'maxDate', 'minDate', 'maxYear', 'minYear', 'locale',\n                          'inputDateFormat', 'popupDateFormat', 'showInputIcon', 'todayButton',\n                          'calendarIcon', 'prevIcon', 'nextIcon', 'clearIcon'];\n        for(var property in properties){\n            createProperty(this, properties[property], config[properties[property]]);\n        }\n\n        function createProperty(obj, name, value){\n            Object.defineProperty(obj, name, {\n                __proto__: null,\n                get: function(){\n                    return value;\n                }\n            });\n        }\n    }\n\n    function amDatePicker() {\n        return {\n            restrict: 'AE',\n            templateUrl: 'am-date-picker.html',\n            require: ['ngModel', 'amDatePicker'],\n            scope:\n            {\n                allowClear: '=?amAllowClear',\n                backButtonText: '@?amBackButtonText',\n                cancelButton: '@?amCancelButton',\n                inputDateFormat: '@?amInputDateFormat',\n                inputLabel: '@?amInputLabel',\n                locale: '@?amLocale',\n                maxDate: '=?amMaxDate',\n                minDate: '=?amMinDate',\n                maxYear: '=?amMaxYear',\n                minYear: '=?amMinYear',\n                popupDateFormat: '@?amPopupDateFormat',\n                showInputIcon: '=?amShowInputIcon',\n                todayButton: '@?amTodayButton'\n            },\n            link: function(scope, element, attr, controllers) {\n                var ngModelCtrl = controllers[0],\n                    amDatePickerCtrl = controllers[1];\n\n                amDatePickerCtrl.configureNgModel(ngModelCtrl);\n            },\n            controller: AmDatePickerController,\n            controllerAs: 'amDatePicker',\n            bindToController: true,\n            replace: true\n        };\n    }\n\n    AmDatePickerController.$inject = ['$scope', '$timeout', '$mdDialog', 'amDatePickerConfig'];\n\n    function AmDatePickerController($scope, $timeout, $mdDialog, amDatePickerConfig) {\n        var amDatePicker = this;\n\n        amDatePicker.clearDate = clearDate;\n        amDatePicker.configureNgModel = configureNgModel;\n        amDatePicker.displayYearSelection = displayYearSelection;\n        amDatePicker.hideYearSelection = hideYearSelection;\n        amDatePicker.previousMonth = previousMonth;\n        amDatePicker.nextMonth = nextMonth;\n        amDatePicker.select = select;\n        amDatePicker.selectYear = selectYear;\n        amDatePicker.openPicker = openPicker;\n        amDatePicker.today = today;\n\n        amDatePicker.model = null;\n        amDatePicker.ngModelCtrl = null;\n        amDatePicker.monthChanged = true;\n        amDatePicker.isTodayDisabled = false;\n        amDatePicker.yearSelection = false;\n\n        var delay = 110;\n\n        $scope.$watch(\n            \"amDatePicker.minDate\",\n            function(newValue, oldValue) {\n                if (amDatePicker.model\n                    && amDatePicker.modelMoment.isBefore(newValue) && newValue) {\n                    amDatePicker.select(moment(newValue).locale(amDatePicker.locale));\n                    updateModel();\n                }\n                generateCalendar();\n            }\n        );\n\n        $scope.$watch(\n            \"amDatePicker.maxDate\",\n            function(newValue, oldValue) {\n                if (amDatePicker.model\n                    && amDatePicker.modelMoment.isAfter(newValue)  && newValue) {\n                    amDatePicker.select(moment(newValue).locale(amDatePicker.locale));\n                    updateModel();\n                }\n                generateCalendar();\n            }\n        );\n\n        function init() {\n            var options = ['allowClear', 'backButtonText', 'cancelButton', 'inputLabel',\n                           'maxDate', 'minDate', 'maxYear', 'minYear', 'locale',\n                           'inputDateFormat', 'popupDateFormat', 'showInputIcon', 'todayButton',\n                           'calendarIcon', 'prevIcon', 'nextIcon', 'clearIcon'];\n\n            for (var i = 0; i < options.length; i++) {\n                if (amDatePickerConfig.hasOwnProperty(options[i])) {\n                    if (!angular.isDefined(amDatePicker[options[i]]))\n                        amDatePicker[options[i]] = amDatePickerConfig[options[i]];\n               }\n            }\n\n            var isDate = angular.isDate(amDatePicker.model);\n            amDatePicker.modelMoment = (isDate) ? moment(angular.copy(amDatePicker.model)) : moment();\n            amDatePicker.modelMoment.locale(amDatePicker.locale);\n            amDatePicker.modelMomentFormatted = (isDate) ? amDatePicker.modelMoment\n                .format(amDatePicker.inputDateFormat) : undefined;\n            amDatePicker.days = [];\n\n            var localeData = moment.localeData(amDatePicker.locale);\n            amDatePicker.daysOfWeek = [\n                localeData._weekdaysMin[1],\n                localeData._weekdaysMin[2],\n                localeData._weekdaysMin[3],\n                localeData._weekdaysMin[4],\n                localeData._weekdaysMin[5],\n                localeData._weekdaysMin[6],\n                localeData._weekdaysMin[0]\n            ];\n            amDatePicker.years = [];\n\n            var minYear = amDatePicker.minYear || 1920,\n                maxYear = amDatePicker.maxYear || 2020;\n\n            for (var y = minYear; y <= maxYear; y++) {\n                amDatePicker.years.push(y);\n            }\n\n            generateCalendar();\n            updateErrorState();\n        }\n\n        function clearDate() {\n            amDatePicker.ngModelCtrl.$setViewValue(undefined);\n            amDatePicker.model = undefined;\n            amDatePicker.modelMomentFormatted = undefined;\n            generateCalendar();\n        }\n\n        function clearErrorState() {\n            ['minDate', 'maxDate', 'valid'].forEach(function(field) {\n                amDatePicker.ngModelCtrl.$setValidity(field, true);\n            }, amDatePicker);\n        }\n\n        function configureNgModel(ngModelCtrl) {\n            amDatePicker.ngModelCtrl = ngModelCtrl;\n\n            ngModelCtrl.$render = function() {\n                var date = amDatePicker.ngModelCtrl.$viewValue;\n\n                amDatePicker.model = date;\n                init();\n            }\n        }\n\n        function DialogController() {\n            var dialog = this,\n                modelMoment = angular.copy(amDatePicker.modelMoment);\n\n            dialog.cancel = cancel;\n            dialog.hide = hide;\n\n            function cancel() {\n                select(modelMoment);\n                $mdDialog.cancel();\n            }\n\n            function hide() {\n                $mdDialog.hide();\n            }\n        }\n\n        function displayYearSelection() {\n            amDatePicker.yearSelection = true;\n            $timeout(function() {\n                var yearSelector = angular.element(document.querySelector('.am-date-picker__year-selector')),\n                    activeYear = angular.element(document.querySelector('.am-date-picker__year--is-active')),\n                    activeYearHeight = activeYear[0].getElementsByTagName('p')[0].offsetHeight;\n\n                yearSelector[0].scrollTop = activeYear[0].offsetTop - yearSelector[0].offsetTop -\n                                            yearSelector[0].clientHeight/2 + activeYearHeight/2;\n            });\n        }\n\n        function generateCalendar() {\n            amDatePicker.days = [];\n            amDatePicker.emptyFirstDays = [];\n            var previousDay = angular.copy(amDatePicker.modelMoment).date(0),\n                firstDayOfMonth = angular.copy(amDatePicker.modelMoment).date(1),\n                lastDayOfMonth = angular.copy(firstDayOfMonth).endOf('month'),\n                maxDays = angular.copy(lastDayOfMonth).date();\n\n            for (var i = firstDayOfMonth.day() === 0 ? 6 : firstDayOfMonth.day() - 1; i > 0; i--) {\n                amDatePicker.emptyFirstDays.push({});\n            }\n            for (var j = 0; j < maxDays; j++) {\n                var date = angular.copy(previousDay.add(1, 'days'));\n                date.disabled = (angular.isDate(amDatePicker.minDate) && date.isBefore(amDatePicker.minDate) ||\n                                 angular.isDate(amDatePicker.maxDate) && date.isAfter(amDatePicker.maxDate));\n                date.selected = angular.isDefined(amDatePicker.modelMoment) &&\n                    date.isSame(amDatePicker.modelMoment, 'day') && !date.disabled;\n                date.today = date.isSame(moment(), 'day');\n\n                amDatePicker.days.push(date);\n            }\n            amDatePicker.isTodayDisabled = (angular.isDate(amDatePicker.minDate) &&\n                                            moment().toDate() < amDatePicker.minDate ||\n                                            angular.isDate(amDatePicker.maxDate) &&\n                                            moment().toDate() > amDatePicker.maxDate);\n        }\n\n        function hideYearSelection() {\n            amDatePicker.yearSelection = false;\n        }\n\n        function nextMonth() {\n            amDatePicker.modelMoment.add(1, 'month');\n            generateCalendar();\n            onNextMonth();\n        }\n\n        function onNextMonth() {\n            amDatePicker.monthChanged = false;\n            amDatePicker.next = true;\n            $timeout(function() {\n                amDatePicker.monthChanged = true;\n            }, delay);\n        }\n\n        function openPicker(ev) {\n            $mdDialog.show({\n                controller: DialogController,\n                controllerAs: 'dialog',\n                onRemoving: hideYearSelection,\n                parent: angular.element(document.body),\n                scope: $scope.$new(),\n                targetEvent: ev,\n                templateUrl: 'am-date-picker_content.tmpl.html'\n            }).then(function() {\n                updateModel();\n            });\n        }\n\n        function onPrevMonth() {\n            amDatePicker.next = false;\n            amDatePicker.monthChanged = false;\n            $timeout(function() {\n                amDatePicker.monthChanged = true;\n            }, delay);\n        }\n\n        function previousMonth() {\n            amDatePicker.modelMoment.subtract(1, 'month');\n            generateCalendar();\n            onPrevMonth();\n        }\n\n        function today() {\n            if (amDatePicker.yearSelection) { amDatePicker.hideYearSelection(); }\n            amDatePicker.select(moment().locale(amDatePicker.locale));\n        }\n\n        function select(_day) {\n            if (_day.disabled) return;\n            amDatePicker.modelMoment = angular.copy(_day);\n            generateCalendar();\n        }\n\n        function selectYear(_year) {\n            amDatePicker.hideYearSelection();\n            select(amDatePicker.modelMoment.year(_year));\n            generateCalendar();\n        }\n\n        function updateModel() {\n            amDatePicker.model = amDatePicker.modelMoment.toDate()\n            amDatePicker.ngModelCtrl.$setViewValue(amDatePicker.model);\n            amDatePicker.modelMomentFormatted = amDatePicker.modelMoment.locale(amDatePicker.locale)\n                                                                        .format(amDatePicker.inputDateFormat);\n            updateErrorState();\n        }\n\n        function updateErrorState() {\n            var date = amDatePicker.ngModelCtrl.$viewValue,\n                momentDate;\n            clearErrorState();\n            if (angular.isDate(date)) {\n                momentDate = moment(date);\n                amDatePicker.ngModelCtrl.$setValidity('minDate', momentDate.isAfter(amDatePicker.minDate));\n                amDatePicker.ngModelCtrl.$setValidity('maxDate', momentDate.isBefore(amDatePicker.maxDate));\n            }\n            else {\n                amDatePicker.ngModelCtrl.$setValidity('valid', false);\n            }\n        }\n\n    }\n})();\n","angular.module(\"am.date-picker\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"am-date-picker.html\",\"<div style=\\\"outline-style: none;\\\">\\n    <!-- Date picker input -->\\n    <div>\\n        <md-input-container>\\n            <label>{{ amDatePicker.inputLabel }}</label>\\n            <md-icon ng-show=\\\"amDatePicker.showInputIcon\\\"\\n                     md-svg-icon=\\\"{{ amDatePicker.calendarIcon }}\\\"\\n                     class=\\\"am-date-picker__calendar-icon\\\"></md-icon>\\n            <input ng-model=\\\"amDatePicker.modelMomentFormatted\\\"\\n                   ng-click=\\\"amDatePicker.openPicker($event)\\\"\\n                   class=\\\"am-date-picker__input\\\"\\n                   type=\\\"text\\\"\\n                   readonly=\\\"readonly\\\">\\n            <div class=\\\"am-date-picker__clear-icon\\\">\\n                <md-button class=\\\"md-icon-button md-mini\\\"\\n                           ng-click=\\\"amDatePicker.clearDate()\\\"\\n                           aria-label=\\\"Clear\\\">\\n                    <md-icon ng-show=\\\"amDatePicker.allowClear\\\"\\n                             md-svg-icon=\\\"{{ amDatePicker.clearIcon }}\\\"></md-icon>\\n                </md-button>\\n            </div>\\n        </md-input-container>\\n    </div>\\n\\n\\n<script type=\\\"text/ng-template\\\" id=\\\"am-date-picker_content.tmpl.html\\\">\\n    <md-dialog class=\\\"am-date-picker__container\\\" aria-label=\\\"Datepicker Content\\\" ng-cloak>\\n    <div layout=\\\"column\\\">\\n\\n        <!-- Current date -->\\n        <div layout-align=\\\"center\\\" class=\\\"am-date-picker__header-current-date\\\">\\n            <p>{{ amDatePicker.modelMoment.format(\\'YYYY\\') }}</p>\\n            <h2>{{ amDatePicker.modelMoment.format(amDatePicker.popupDateFormat) }}</h2>\\n        </div>\\n\\n    </div>\\n\\n    <!-- Date picker: content -->\\n    <div ng-hide=\\\"amDatePicker.yearSelection\\\" class=\\\"am-date-picker__content am-date-picker__animate-year-selection\\\">\\n        <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\" class=\\\"am-date-picker__month-year\\\">\\n            <md-button ng-click=\\\"amDatePicker.previousMonth()\\\"\\n                       class=\\\"md-icon-button\\\"\\n                       aria-label=\\\"Prev Month Button\\\">\\n                <md-icon aria-label=\\\"Prev\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ amDatePicker.prevIcon }}\\\"></md-icon>\\n\\n            </md-button>\\n\\n            <md-button ng-click=\\\"amDatePicker.displayYearSelection()\\\"\\n                       class=\\\"am-date-picker__month-year\\\">\\n                {{ amDatePicker.modelMoment.format(\\'MMMM YYYY\\') }}\\n            </md-button>\\n\\n             <md-button ng-click=\\\"amDatePicker.nextMonth()\\\"\\n                        class=\\\"md-icon-button\\\"\\n                        aria-label=\\\"Next Month Button\\\">\\n                <md-icon aria-label=\\\"Next\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ amDatePicker.nextIcon }}\\\"></md-icon>\\n            </md-button>\\n        </div>\\n\\n        <!-- Calendar -->\\n        <div class=\\\"am-date-picker__calendar am-date-picker__animate-month-change\\\"\\n             ng-class=\\\"{\\'next\\': amDatePicker.next,\\n                        \\'prev\\': !amDatePicker.next}\\\"\\n             ng-if=\\\"amDatePicker.monthChanged\\\">\\n\\n            <!-- Weekdays -->\\n            <div style=\\\"padding-left: 12px; padding-right: 20px;\\\" layout layout-align=\\\"space-between\\\">\\n                <span ng-repeat=\\\"day in amDatePicker.daysOfWeek\\\"\\n                      class=\\\"am-date-picker__weekdays\\\">\\n                    {{ day }}\\n                </span>\\n            </div>\\n\\n            <!-- Days -->\\n            <span ng-repeat=\\\"x in amDatePicker.emptyFirstDays\\\"\\n                  class=\\\"am-date-picker__days\\\">&nbsp;</span>\\n\\n            <div class=\\\"am-date-picker__days am-date-picker__day\\\"\\n                 ng-class=\\\"{ \\'am-date-picker__day--is-selected\\': day.selected,\\n                             \\'am-date-picker__day--is-today\\': day.today && !day.selected,\\n                             \\'am-date-picker__day--is-disabled\\': day.disabled }\\\"\\n                 ng-repeat=\\\"day in amDatePicker.days\\\">\\n                <a ng-click=\\\"amDatePicker.select(day)\\\">{{ day ? day.format(\\'D\\') : \\'\\' }}</a>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <!-- Year selection -->\\n    <div class=\\\"am-date-picker__year-selector am-date-picker__animate-year-selection\\\"\\n         ng-show=\\\"amDatePicker.yearSelection\\\">\\n        <a class=\\\"am-date-picker__year\\\"\\n           ng-repeat=\\\"year in amDatePicker.years\\\"\\n           ng-class=\\\"{ \\'am-date-picker__year--is-active\\':\\n                        year == amDatePicker.modelMoment.format(\\'YYYY\\') }\\\"\\n           ng-click=\\\"amDatePicker.selectYear(year)\\\">\\n            <p>{{ year }}</p>\\n        </a>\\n    </div>\\n\\n    <!--Actions-->\\n    <md-dialog-actions layout=\\\"row\\\" class=\\\"am-date-picker__actions\\\">\\n        <md-button ng-click=\\\"amDatePicker.today()\\\"\\n                   ng-disabled=\\\"amDatePicker.isTodayDisabled\\\"\\n                   ng-if=\\\"amDatePicker.todayButton\\\">\\n            {{ amDatePicker.todayButton }}\\n        </md-button>\\n        <span flex></span>\\n        <div ng-if=\\\"!amDatePicker.yearSelection\\\">\\n            <md-button ng-click=\\\"dialog.cancel()\\\"\\n                       ng-if=\\\"amDatePicker.cancelButton\\\">\\n                {{ amDatePicker.cancelButton }}\\n            </md-button>\\n            <md-button ng-click=\\\"dialog.hide()\\\">OK</md-button>\\n        </div>\\n        <md-button ng-click=\\\"amDatePicker.hideYearSelection()\\\"\\n                   ng-if=\\\"amDatePicker.yearSelection\\\">{{ amDatePicker.backButtonText }}</md-button>\\n    </md-dialog-actions>\\n    </md-dialog>\\n</script>\\n\\n</div>\\n\");}]);"],"sourceRoot":"/source/"}