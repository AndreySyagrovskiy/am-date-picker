{"version":3,"sources":["am-date-picker_directive.js","am-date-picker.tmpl.js"],"names":["amDatePickerConfig","config","this","allowClear","backButtonText","inputDateFormat","maxYear","minYear","locale","popupDateFormat","showInputIcon","calendarIcon","clearIcon","nextIcon","prevIcon","setIcons","icons","key","setOptions","options","$get","$mdDialog","$q","amDatePickerService","$inject","createProperty","obj","name","value","Object","defineProperty","__proto__","get","properties","property","amDatePicker","restrict","templateUrl","require","scope","cancelButton","inputLabel","maxDate","minDate","todayButton","link","element","attr","controllers","ngModelCtrl","amDatePickerCtrl","configureNgModel","controller","AmDatePickerController","controllerAs","bindToController","replace","$scope","$timeout","init","i","length","hasOwnProperty","angular","isDefined","moment","modelMomentSelected","model","copy","modelMoment","modelMomentFormatted","format","undefined","days","daysOfWeek","weekdaysMin","years","y","push","generateCalendar","clearDate","$setViewValue","$render","$viewValue","DialogController","cancel","hide","dialog","displayYearSelection","yearSelection","yearSelector","document","querySelector","activeYear","activeYearHeight","getElementsByTagName","offsetHeight","scrollTop","offsetTop","clientHeight","emptyFirstDays","previousDay","date","firstDayOfMonth","lastDayOfMonth","endOf","maxDays","day","j","add","selected","isSame","today","toDate","disabled","isTodayDisabled","hideYearSelection","nextMonth","onNextMonth","monthChanged","next","delay","openPicker","ev","show","onRemoving","$new","targetEvent","then","updateModel","onPrevMonth","previousMonth","subtract","select","_day","selectYear","_year","year","$watch","newValue","oldValue","module","directive","provider","run","$templateCache","put"],"mappings":"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","file":"am-date-picker.min.js","sourcesContent":["(function()\n{\n    'use strict';\n\n    angular\n        .module('am.date-picker', ['ngMaterial', 'ngAnimate'])\n        .directive('amDatePicker', amDatePicker)\n        .provider('amDatePickerConfig', amDatePickerConfig);\n\n\n    function amDatePickerConfig() {\n        var config = this;\n        config.allowClear = true;\n        config.backButtonText = \"Back\";\n        config.inputDateFormat = 'LL';\n        config.maxYear = 2020;\n        config.minYear = 1920;\n        config.locale = 'en';\n        config.popupDateFormat = 'ddd, MMM D';\n        config.showInputIcon = false;\n\n        /* Icons */\n        config.calendarIcon = '/dist/images/icons/ic_today_24px.svg';\n        config.clearIcon = '/dist/images/icons/ic_close_24px.svg';\n        config.nextIcon = '/dist/images/icons/ic_chevron_right_18px.svg';\n        config.prevIcon = '/dist/images/icons/ic_chevron_left_18px.svg';\n\n        config.setIcons = function(icons) {\n            for (var key in icons) {\n                config[key] = icons[key];\n            }\n        }\n\n        config.setOptions = function(options) {\n            for (var key in options) {\n                config[key] = options[key];\n            }\n         }\n\n        this.$get = function ($mdDialog, $q) {\n            return new amDatePickerService(config, $mdDialog, $q);\n        };\n        this.$get.$inject = [\"$mdDialog\", \"$q\"];\n\n    }\n\n    function amDatePickerService(config, $mdDialog, $q){\n        var properties = ['allowClear', 'backButtonText', 'cancelButton', 'showInputIcon',\n            'inputLabel', 'maxDate', 'minDate', 'maxYear', 'minYear', 'locale',\n            'inputDateFormat', 'popupDateFormat', 'todayButton', 'calendarIcon',\n            'prevIcon', 'nextIcon', 'clearIcon'];\n        for(var property in properties){\n            createProperty(this, properties[property], config[properties[property]]);\n        }\n\n        function createProperty(obj, name, value){\n            Object.defineProperty(obj, name, {\n                __proto__: null,\n                get: function(){\n                    return value;\n                }\n            });\n        }\n    }\n\n    function amDatePicker() {\n        return {\n            restrict: 'AE',\n            templateUrl: 'am-date-picker.html',\n            require: ['ngModel', 'amDatePicker'],\n            scope:\n            {\n                allowClear: '=?amAllowClear',\n                cancelButton: '@?amCancelButton',\n                inputDateFormat: '@?amInputDateFormat',\n                inputLabel: '@?amInputLabel',\n                maxDate: '=?amMaxDate',\n                minDate: '=?amMinDate',\n                maxYear: '=?amMaxYear',\n                minYear: '=?amMinYear',\n                popupDateFormat: '@?amPopupDateFormat',\n                showInputIcon: '=?amShowInputIcon',\n                todayButton: '@?amTodayButton'\n            },\n            link: function(scope, element, attr, controllers) {\n                var ngModelCtrl = controllers[0],\n                    amDatePickerCtrl = controllers[1];\n\n                amDatePickerCtrl.configureNgModel(ngModelCtrl);\n            },\n            controller: AmDatePickerController,\n            controllerAs: 'amDatePicker',\n            bindToController: true,\n            replace: true\n        };\n    }\n\n    AmDatePickerController.$inject = ['$scope', '$timeout', '$mdDialog', 'amDatePickerConfig'];\n\n    function AmDatePickerController($scope, $timeout, $mdDialog, amDatePickerConfig) {\n        var amDatePicker = this;\n\n        amDatePicker.clearDate = clearDate;\n        amDatePicker.configureNgModel = configureNgModel;\n        amDatePicker.displayYearSelection = displayYearSelection;\n        amDatePicker.hideYearSelection = hideYearSelection;\n        amDatePicker.previousMonth = previousMonth;\n        amDatePicker.nextMonth = nextMonth;\n        amDatePicker.select = select;\n        amDatePicker.selectYear = selectYear;\n        amDatePicker.openPicker = openPicker;\n        amDatePicker.today = today;\n\n        amDatePicker.moment = moment;\n        amDatePicker.isTodayDisabled = false;\n        amDatePicker.yearSelection = false;\n        amDatePicker.monthChanged = true;\n        amDatePicker.ngModelCtrl = null;\n        amDatePicker.model = null;\n\n        var delay = 110;\n\n        init();\n\n        $scope.$watch(\n            \"amDatePicker.minDate\",\n            function(newValue, oldValue) {\n                if (amDatePicker.model && newValue > amDatePicker.model) {\n                    amDatePicker.select(moment(newValue));\n                    updateModel();\n                }\n                generateCalendar();\n            }\n        );\n\n        $scope.$watch(\n            \"amDatePicker.maxDate\",\n            function(newValue, oldValue) {\n                if (amDatePicker.model && newValue < amDatePicker.model) {\n                    amDatePicker.select(moment(newValue));\n                    updateModel();\n                }\n                generateCalendar();\n            }\n        );\n\n        function init() {\n            var options = ['allowClear', 'backButtonText', 'cancelButton', 'showInputIcon',\n                           'inputLabel', 'maxDate', 'minDate', 'maxYear', 'minYear', 'locale',\n                           'inputDateFormat', 'popupDateFormat', 'todayButton', 'calendarIcon',\n                           'prevIcon', 'nextIcon', 'clearIcon'];\n\n            for (var i = 0; i < options.length; i++) {\n                if (amDatePickerConfig.hasOwnProperty(options[i])) {\n                    if (!angular.isDefined(amDatePicker[options[i]]))\n                        amDatePicker[options[i]] = amDatePickerConfig[options[i]];\n               }\n            }\n\n            amDatePicker.moment.locale(amDatePicker.locale);\n\n            amDatePicker.modelMomentSelected = angular.isDefined(amDatePicker.model) ?\n                moment(angular.copy(amDatePicker.model)) : moment();\n            amDatePicker.modelMoment = angular.copy(amDatePicker.modelMomentSelected);\n            amDatePicker.modelMomentFormatted = angular.isDefined(amDatePicker.model) ?\n                moment(amDatePicker.model).format(amDatePicker.inputDateFormat) : undefined;\n            amDatePicker.days = [];\n            amDatePicker.daysOfWeek = [\n                moment.weekdaysMin(1),\n                moment.weekdaysMin(2),\n                moment.weekdaysMin(3),\n                moment.weekdaysMin(4),\n                moment.weekdaysMin(5),\n                moment.weekdaysMin(6),\n                moment.weekdaysMin(0)\n            ];\n            amDatePicker.years = [];\n\n            var minYear = amDatePicker.minYear || 1920,\n                maxYear = amDatePicker.maxYear || 2020;\n\n            for (var y = minYear; y <= maxYear; y++) {\n                amDatePicker.years.push(y);\n            }\n\n            generateCalendar();\n        }\n\n        function clearDate() {\n            amDatePicker.ngModelCtrl.$setViewValue(undefined);\n            amDatePicker.model = undefined;\n            amDatePicker.modelMomentFormatted = undefined;\n            generateCalendar();\n        }\n\n        function configureNgModel(ngModelCtrl) {\n            amDatePicker.ngModelCtrl = ngModelCtrl;\n\n            ngModelCtrl.$render = function() {\n                amDatePicker.model = amDatePicker.ngModelCtrl.$viewValue;\n                init();\n            }\n        }\n\n        function DialogController() {\n            var dialog = this,\n                modelMomentSelected = angular.copy(amDatePicker.modelMomentSelected);\n\n            dialog.cancel = cancel;\n            dialog.hide = hide;\n\n            function cancel() {\n                amDatePicker.modelMomentSelected = modelMomentSelected;\n                $mdDialog.cancel();\n            }\n\n            function hide() {\n                $mdDialog.hide();\n            }\n        }\n\n        function displayYearSelection() {\n            amDatePicker.yearSelection = true;\n            $timeout(function() {\n                var yearSelector = angular.element(document.querySelector('.am-date-picker__year-selector')),\n                    activeYear = angular.element(document.querySelector('.am-date-picker__year--is-active')),\n                    activeYearHeight = activeYear[0].getElementsByTagName('p')[0].offsetHeight;\n\n                yearSelector[0].scrollTop = activeYear[0].offsetTop - yearSelector[0].offsetTop -\n                                            yearSelector[0].clientHeight/2 + activeYearHeight/2;\n            });\n        }\n\n        function generateCalendar() {\n            amDatePicker.days = [];\n            amDatePicker.emptyFirstDays = [];\n            var previousDay = angular.copy(amDatePicker.modelMoment).date(0),\n                firstDayOfMonth = angular.copy(amDatePicker.modelMoment).date(1),\n                lastDayOfMonth = angular.copy(firstDayOfMonth).endOf('month'),\n                maxDays = angular.copy(lastDayOfMonth).date();\n\n            for (var i = firstDayOfMonth.day() === 0 ? 6 : firstDayOfMonth.day() - 1; i > 0; i--) {\n                amDatePicker.emptyFirstDays.push({});\n            }\n            for (var j = 0; j < maxDays; j++) {\n                var date = angular.copy(previousDay.add(1, 'days'));\n                date.selected = angular.isDefined(amDatePicker.modelMomentSelected) && date.isSame(amDatePicker.modelMomentSelected, 'day');\n                date.today = date.isSame(moment(), 'day');\n                if (angular.isDefined(amDatePicker.minDate) && date.toDate() < amDatePicker.minDate) {\n                    date.disabled = true;\n                }\n                if (angular.isDefined(amDatePicker.maxDate) && date.toDate() > amDatePicker.maxDate) {\n                    date.disabled = true;\n                }\n                amDatePicker.days.push(date);\n            }\n            amDatePicker.isTodayDisabled = (angular.isDefined(amDatePicker.minDate) &&\n                                            moment().toDate() < amDatePicker.minDate ||\n                                            angular.isDefined(amDatePicker.maxDate) &&\n                                            moment().toDate() > amDatePicker.maxDate);\n        }\n\n        function hideYearSelection() {\n            amDatePicker.yearSelection = false;\n        }\n\n        function nextMonth() {\n            amDatePicker.modelMoment.add(1, 'month');\n            generateCalendar();\n            onNextMonth();\n        }\n\n        function onNextMonth() {\n            amDatePicker.monthChanged = false;\n            amDatePicker.next = true;\n            $timeout(function() {\n                amDatePicker.monthChanged = true;\n            }, delay);\n        }\n\n        function openPicker(ev) {\n            $mdDialog.show({\n                controller: DialogController,\n                controllerAs: 'dialog',\n                onRemoving: hideYearSelection,\n                // parent: angular.element(document.body),\n                scope: $scope.$new(),\n                targetEvent: ev,\n                templateUrl: 'am-date-picker_content.tmpl.html'\n            }).then(function() {\n                updateModel();\n            });\n        }\n\n        function onPrevMonth() {\n            amDatePicker.next = false;\n            amDatePicker.monthChanged = false;\n            $timeout(function() {\n                amDatePicker.monthChanged = true;\n            }, delay);\n        }\n\n        function previousMonth() {\n            amDatePicker.modelMoment.subtract(1, 'month');\n            generateCalendar();\n            onPrevMonth();\n        }\n\n        function today() {\n            if (amDatePicker.yearSelection) { amDatePicker.hideYearSelection(); }\n            amDatePicker.select(moment());\n        }\n\n        function select(_day) {\n            if (_day.disabled) return;\n            amDatePicker.modelMomentSelected = angular.copy(_day);\n            amDatePicker.modelMoment = angular.copy(_day);\n            generateCalendar();\n        }\n\n        function selectYear(_year) {\n            amDatePicker.hideYearSelection();\n            amDatePicker.modelMoment.year(_year);\n\n            generateCalendar();\n        }\n\n        function updateModel() {\n            amDatePicker.model = amDatePicker.modelMomentSelected.toDate()\n            amDatePicker.ngModelCtrl.$setViewValue(amDatePicker.model);\n            amDatePicker.modelMomentFormatted = amDatePicker.modelMomentSelected.format(amDatePicker.inputDateFormat);\n        }\n    }\n})();\n","angular.module(\"am.date-picker\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"am-date-picker.html\",\"<div style=\\\"outline-style: none;\\\">\\n    <!-- Date picker input -->\\n    <div>\\n        <md-input-container class=\\\"md-icon-float md-icon-right\\\">\\n            <label>{{ amDatePicker.inputLabel }}</label>\\n            <md-icon ng-show=\\\"amDatePicker.showInputIcon\\\"\\n                     md-svg-icon=\\\"{{ amDatePicker.calendarIcon }}\\\"\\n                     class=\\\"am-date-picker__calendar-icon\\\"></md-icon>\\n            <input ng-model=\\\"amDatePicker.modelMomentFormatted\\\"\\n                   ng-click=\\\"amDatePicker.openPicker($event)\\\"\\n                   class=\\\"am-date-picker__input\\\"\\n                   type=\\\"text\\\"\\n                   readonly=\\\"readonly\\\">\\n            <md-icon ng-show=\\\"amDatePicker.allowClear\\\"\\n                     ng-click=\\\"amDatePicker.clearDate()\\\"\\n                     md-svg-icon=\\\"{{ amDatePicker.clearIcon }}\\\"\\n                     class=\\\"am-date-picker__clear-icon\\\"></md-icon>\\n        </md-input-container>\\n    </div>\\n\\n\\n<script type=\\\"text/ng-template\\\" id=\\\"am-date-picker_content.tmpl.html\\\">\\n    <md-dialog class=\\\"am-date-picker__container\\\" aria-label=\\\"Datepicker Content\\\" ng-cloak>\\n    <div layout=\\\"column\\\">\\n\\n        <!-- Current date -->\\n        <div layout-align=\\\"center\\\" class=\\\"am-date-picker__header-current-date\\\">\\n            <p>{{ amDatePicker.moment(amDatePicker.modelMomentSelected).format(\\'YYYY\\') }}</p>\\n            <h2>{{ amDatePicker.moment(amDatePicker.modelMomentSelected).format(amDatePicker.popupDateFormat) }}</h2>\\n        </div>\\n\\n    </div>\\n\\n    <!-- Date picker: content -->\\n    <div ng-hide=\\\"amDatePicker.yearSelection\\\" class=\\\"am-date-picker__content am-date-picker__animate-year-selection\\\">\\n        <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\" class=\\\"am-date-picker__month-year\\\">\\n            <md-button ng-click=\\\"amDatePicker.previousMonth()\\\"\\n                       class=\\\"md-icon-button\\\">\\n                <md-icon aria-label=\\\"Prev\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ amDatePicker.prevIcon }}\\\"></md-icon>\\n\\n            </md-button>\\n\\n            <md-button ng-click=\\\"amDatePicker.displayYearSelection()\\\"\\n                       class=\\\"am-date-picker__month-year\\\">\\n                {{ amDatePicker.modelMoment.format(\\'MMMM YYYY\\') }}\\n            </md-button>\\n\\n             <md-button ng-click=\\\"amDatePicker.nextMonth()\\\"\\n                        class=\\\"md-icon-button\\\">\\n                <md-icon aria-label=\\\"Next\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ amDatePicker.nextIcon }}\\\"></md-icon>\\n            </md-button>\\n        </div>\\n\\n        <!-- Calendar -->\\n        <div class=\\\"am-date-picker__calendar am-date-picker__animate-month-change\\\"\\n             ng-class=\\\"{\\'next\\': amDatePicker.next,\\n                        \\'prev\\': !amDatePicker.next}\\\"\\n             ng-if=\\\"amDatePicker.monthChanged\\\">\\n\\n            <!-- Weekdays -->\\n            <div style=\\\"padding-left: 12px; padding-right: 20px;\\\" layout layout-align=\\\"space-between\\\">\\n                <span ng-repeat=\\\"day in amDatePicker.daysOfWeek\\\"\\n                      class=\\\"am-date-picker__weekdays\\\">\\n                    {{ day }}\\n                </span>\\n            </div>\\n\\n            <!-- Days -->\\n            <span ng-repeat=\\\"x in amDatePicker.emptyFirstDays\\\"\\n                  class=\\\"am-date-picker__days\\\">&nbsp;</span>\\n\\n            <div class=\\\"am-date-picker__days am-date-picker__day\\\"\\n                 ng-class=\\\"{ \\'am-date-picker__day--is-selected\\': day.selected,\\n                             \\'am-date-picker__day--is-today\\': day.today && !day.selected,\\n                             \\'am-date-picker__day--is-disabled\\': day.disabled }\\\"\\n                 ng-repeat=\\\"day in amDatePicker.days\\\">\\n                <a ng-click=\\\"amDatePicker.select(day)\\\">{{ day ? day.format(\\'D\\') : \\'\\' }}</a>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <!-- Year selection -->\\n    <div class=\\\"am-date-picker__year-selector am-date-picker__animate-year-selection\\\"\\n         ng-show=\\\"amDatePicker.yearSelection\\\">\\n        <a class=\\\"am-date-picker__year\\\"\\n           ng-repeat=\\\"year in amDatePicker.years\\\"\\n           ng-class=\\\"{ \\'am-date-picker__year--is-active\\':\\n                        year == amDatePicker.moment(amDatePicker.modelMomentSelected).format(\\'YYYY\\') }\\\"\\n           ng-click=\\\"amDatePicker.selectYear(year)\\\">\\n            <p>{{ year }}</p>\\n        </a>\\n    </div>\\n\\n    <!--Actions-->\\n    <md-dialog-actions layout=\\\"row\\\" class=\\\"md-actions am-date-picker__actions\\\">\\n        <md-button ng-click=\\\"amDatePicker.today()\\\"\\n                   ng-disabled=\\\"amDatePicker.isTodayDisabled\\\"\\n                   ng-if=\\\"amDatePicker.todayButton\\\">\\n            {{ amDatePicker.todayButton }}\\n        </md-button>\\n        <span flex></span>\\n        <div ng-if=\\\"!amDatePicker.yearSelection\\\">\\n            <md-button ng-click=\\\"dialog.cancel()\\\"\\n                       ng-if=\\\"amDatePicker.cancelButton\\\">\\n                {{ amDatePicker.cancelButton }}\\n            </md-button>\\n            <md-button ng-click=\\\"dialog.hide()\\\">OK</md-button>\\n        </div>\\n        <md-button ng-click=\\\"amDatePicker.hideYearSelection()\\\"\\n                   ng-if=\\\"amDatePicker.yearSelection\\\">{{ amDatePicker.backButtonText }}</md-button>\\n    </md-dialog-actions>\\n    </md-dialog>\\n</script>\\n\\n</div>\\n\");}]);"],"sourceRoot":"/source/"}